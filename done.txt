0015 (1.5)
X remove json as a file type to display in editor
X   otherwise it's not added to the data folder, which is inconsistent

linting changes
X update to JSHint 2.13.4
X turn off lint for using dot syntax
X   too confusing, and will be removed in jshint soon too
X add DOCTYPE declaration to template index.html
X   https://github.com/processing/processing4/issues/465
X allow users to skip semicolons
X   https://github.com/fathominfo/processing-p5js-mode/issues/25

temp files
X still a lot of temp files left around?
X   instead of doing temp files, should that be state stored by the server?
X     if there's a 'temp' version of a particular file, use that when requested
X     or just send the contents of the editor tabs when requested?
X   write the temp stuff to another folder?
X   positive part of temp files: not having to save between runs
X   save the temp stuff to a different folder entirely?
o when using p5jsMode, just require that sketches are saved
o   too many problems with unsaved code not working properly
o   (instead of doing the weird tricks with temp files)
X   this is a headache; let's not require it
X change to loading modified files dynamically at the server level


0014 (1.4.2)
X fixes for how openURL() is handled
X   https://github.com/fathominfo/processing-p5js-mode/pull/29
X update outdated URLs, change a few from http to https
X show local server address in the console
X require use of 4.0 beta 5 for PdeTextAreaDefaults constructor deprecation
X cleaning up some old code, using lambdas, clear up warnings
o need to sort out the deleteFile() weirdness in JNA
X   should be resolved now


0013 (1.4.1)
X imports were totally wrong inside build
X   apparently was building with IntelliJ against Java 11?
X get things working properly from build.xml


0012 (1.4)
X change 'authorList' to 'authors' (that changed in, uh, 3.0a11)
X update p5.js to 1.4.0 instead of 1.2.0
X update jshint from 2.12 to 2.13.3
X   https://github.com/jshint/jshint/releases/tag/2.13.3

update to new Nashorn scripting engine
X Warning: Nashorn engine is planned to be removed from a future JDK release
X   https://github.com/fathominfo/processing-p5js-mode/issues/27
X add nashorn-core-15.3.jar (named as nashorn-core.jar)
X   https://search.maven.org/artifact/org.openjdk.nashorn/nashorn-core/15.3/jar
X nashorn-core uses version 7.3.1 of asm, asm-commons, asm-tree, asm-util
X   web page https://search.maven.org/artifact/org.ow2.asm/asm-util/7.3.1/jar
X   jar download https://search.maven.org/remotecontent?filepath=org/ow2/asm/asm-commons/7.3.1/asm-commons-7.3.1.jar

return new org.openjdk.nashorn.api.scripting.NashornScriptEngineFactory()            .getScriptEngine();

https://stackoverflow.com/questions/65265629/how-to-use-nashorn-in-java-15-and-later

https://github.com/openjdk/nashorn
https://search.maven.org/artifact/org.openjdk.nashorn/nashorn-core/15.3/jar

Exception in thread "Thread-2" java.lang.NullPointerException: Cannot invoke "javax.script.Compilable.compile(String)" because "engine" is null
    at processing.mode.p5js.Linter.lambda$0(Linter.java:55)
    at java.base/java.lang.Thread.run(Thread.java:833)

X aborted attempt to work with GraalVM
o   what a f*king mess: https://medium.com/graalvm/d4da3605b6cb
o     scroll to "How to run GraalVM JavaScript on a stock JDK"
o     decompose this maven-fest https://github.com/graalvm/graal-js-jdk11-maven-demo
o     into the necessary collection of jars, and try to move from there
X   seems to be possible to follow our use case: a Java-only engine,
X     though everything seems to push in direction of native code or full VM
o   how to suppress the warning
o     https://bugs.openjdk.java.net/browse/JDK-8210140
o     pass "--no-deprecation-warning" as a Nashorn startup arg
o     or on JVM startup: -Dnashorn.args="--no-deprecation-warning"
o   https://www.graalvm.org/downloads/
o   ok, less of a mess:
o     simpler tutorial: https://golb.hplar.ch/2020/04/java-javascript-engine.html
o     list of jars needed: https://www.graalvm.org/reference-manual/js/RunOnJDK/#graalvm-javascript-without-maven---jar-files-from-graalvm
o   using a Linux download just in case any native libs are in there
o     https://github.com/graalvm/graalvm-ce-builds/releases/tag/vm-21.2.0

$GRAALVM/jre/languages/js/graaljs.jar - core component of GraalVM JavaScript
https://repo.maven.apache.org/maven2/org/graalvm/js/js/20.3.0/js-20.3.0.jar

$GRAALVM/jre/languages/js/icu4j.jar - ICU4J component for internationalization
https://repo.maven.apache.org/maven2/com/ibm/icu/icu4j/67.1/icu4j-67.1.jar

$GRAALVM/jre/languages/regex/tregex.jar - GraalVM’s regular expression engine
https://repo.maven.apache.org/maven2/org/graalvm/regex/regex/20.3.0/regex-20.3.0.jar

$GRAALVM/jre/lib/boot/graal-sdk.jar - GraalVM’s SDK to implement languages
https://repo.maven.apache.org/maven2/org/graalvm/sdk/graal-sdk/20.3.0/graal-sdk-20.3.0.jar

$GRAALVM/jre/lib/truffle/truffle-api.jar - GraalVM’s Language API, to implement interpreters
https://repo.maven.apache.org/maven2/org/graalvm/truffle/truffle-api/20.3.0/truffle-api-20.3.0.jar

$GRAALVM/jre/lib/graalvm/graaljs-launcher.jar - GraalVM JS cmd line interpreter (optional)
???

$GRAALVM/jre/lib/graalvm/launcher-common.jar - common launcher code shared by all languages
???
https://search.maven.org/artifact/org.graalvm/launcher-common (but that's old...)
also https://docs.oracle.com/en/graalvm/enterprise/20/docs/reference-manual/js/RunOnJDK/

$GRAALVM/jre/lib/boot/graaljs-scriptengine.jar - ScriptEngine/JSR 223 support (optional)
https://repo.maven.apache.org/maven2/org/graalvm/js/js-scriptengine/20.3.0/js-scriptengine-20.3.0.jar


0011 (1.3.1)
X workaround for NoClassDefFoundError that Chris ran into


0010 (1.3)
X add revision check to the build
X use p5js 1.0
X update examples, remove p5js.dom references
X update to p5js 1.1.9 (July 22, 2020)
X fix up warnings by explicitly closing a few more streams
X update to p5js 1.2.0 (December 19, 2020 release)
X adding workaround for JNA issues on Big Sur
X   https://github.com/fathominfo/processing-p5js-mode/issues/26
X ability to update p5*.js in the libraries subfolder
o   automatically notify user if version in the template is updated?
X   not just about p5jsMode updates, but updating older sketches
X   this could be a Mode menu item, grayed out if up-to-date
o how do we bring back the auto-update block if it's broken?
o   or if it's not present, stop updating that file?
X reset index.html from menu option


0009 (1.2.2)
X fix release numbering


0008 (1.2.1)
X update p5js version from 0.7.3 to 0.8
X update to jshint 2.11.0
X update p5js to 0.10.2
X remove dom as separate library
X disable trailing comma warning
X   https://jshint.com/docs/options/#trailingcomma


0007 (1.2)
X incorporating linter
X use one server/port per editor window
X   stay fixed throughout usage
X   still a downside to not always being the same (for breakpoints)
X     but for advanced editing like that, people shouldn't be using this mode anyway
X fix coloring and Find in Reference for circle(), square(), push(), pop()


0006 (1.1.1)
X fix up the build process to avoid errors


0005 (1.1)
X make worker objects no longer static, fixing collisions and cache issues
X update p5.js to 0.5.16
X   https://github.com/fathominfo/processing-p5js-mode/pull/19
X update to 0.7.3
X   update sound and dom libraries
X Allow use of let and const in p5js-mode
X   https://github.com/fathominfo/processing-p5js-mode/issues/20
X   seems to be supported as of 8u40?
X     https://bugs.openjdk.java.net/browse/JDK-8046038
X   https://developer.oracle.com/databases/nashorn-javascript-part1
X p5.js sketch breaks when I save it (looks like issue with 'let')
X   https://github.com/fathominfo/processing-p5js-mode/issues/18
X update examples
X use minified versions of code?
X issues when editing css files
X   https://github.com/fathominfo/processing-p5js-mode/issues/21
X   showing a css tab was causing a lot of error messages
X Add support for editing .json files in the Editor
X   https://github.com/fathominfo/processing-p5js-mode/issues/16
X   modify p5jsMode.getExtensions() (what to do about data folder?)
o   and how should syntax highlighting work? (uses js highlighter)
X   .json files must be in the root of the sketch folder
X   (not a subfolder like data or assets) to be visible/editable
X use minified version of libs for the examples
X check whether Desktop is available for URL opening
X   https://github.com/fathominfo/processing-p5js-mode/issues/17
X Opening a sketch without PDE folder structure not working properly
X   https://github.com/fathominfo/processing-p5js-mode/issues/7
X Find in Reference not implemented
X   https://github.com/fathominfo/processing-p5js-mode/issues/22
X   "Could not open the URL... p5jsMode/reference/ellipse_.html"
X   http://p5js.org/reference/#/p5/ellipse
o   what does loadKeywords map to?
X   implemented a hokey version

cleaning
o NPE when doing Find in Reference w/ nothing selected
o   Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
o   at processing.app.ui.Editor.handleFindReference(Editor.java:2309)
o   at processing.mode.p5js.p5jsEditor.access$0(p5jsEditor.java:1)
o   at processing.mode.p5js.p5jsEditor$5.actionPerformed(p5jsEditor.java:337)
X   doesn't seem to be possible anymore
o properly implement the minified versions of libs
o   git checkout e560d0576c2440081787e7b09eefdc760152f022^ -- <file_path>
o   (that's the commit that started deleting, ^ will get us to previous)
o when rewriting the index.html file, 'sketch modified externally' messages
o   https://github.com/fathominfo/processing-p5js-mode/issues/15
X   seems like the Change Detector has ironed this out in the meantime.


0004 (1.0.4)
X prevent reformatting of index.html
X   https://github.com/fathominfo/processing-p5js-mode/issues/13
X update to 0.5.7 release of p5js and supporting libraries
X remove the sketch.js renaming code
X switch to minified version of libraries
X   and switch back
X when adding library, add it to the "do not touch" section as well
X don't tell people "do not touch", then talk about un-commenting libraries
X disable opening of sketch.js files so things don't get destroyed

verify
X (hopefully) fix the release itself so that it installs properly
X   https://github.com/fathominfo/processing-p5js-mode/issues/11
X re-using the same server port for each run
X   https://github.com/fathominfo/processing-p5js-mode/issues/8
X Windows temp files still in use and cannot be removed
X   https://github.com/fathominfo/processing-p5js-mode/issues/6


0003 (1.0.3)
X update to p5js 0.5.4
X investigate problem with browser returning -600 error
X   https://github.com/fathominfo/processing-p5js-mode/issues/4
X use jsoup to parse/modify the html instead of find/replace
X (hopefully) fix the release itself so that it installs properly
_   https://github.com/fathominfo/processing-p5js-mode/issues/11
X re-using the same server port for each run
_   https://github.com/fathominfo/processing-p5js-mode/issues/8
X Windows temp files still in use and cannot be removed
_   https://github.com/fathominfo/processing-p5js-mode/issues/6


0002 (1.0.2)
X Save required before running
X   https://github.com/fathominfo/processing-p5js-mode/issues/2
X Running a sketch may simply re-launch a window with the old server
X   https://github.com/fathominfo/processing-p5js-mode/issues/3
X   probably there before, but exacerbated by fixing #2


0001 (1.0)
X add 'dist' target to build.xml
X add 'clean' target to build.xml
X how do we edit html, text, css?
X set an auto-update block in the html to include the js files
X   insert files into html method:
X     first add anything from /libraries
X     then anything from the main directory
X     then the main sketch.js file
X don't include dom.js and sound.js by default
X html not reloading in editor after rebuild
X need to write template correctly on first load
o   need to call updateHtml() on init
X   can't do that b/c the Sketch and Editor objects don't exist yet
X use temp files to run without saving
X   how to clear these out when rewriting the html
X   need to use some sort of weird temp name format
X   contradiction between wanting valid files locally, always
o   should it be writing some .tmp.html files instead?
o     writeHtml() could be called to save those out in the interim
X     force save of HTML file when updating
X implement handling for favicon.ico
X   should be able to send the image from PApplet
X import all the examples
X   also generate the ordering for the category folders
X   get assets to work properly
X hide 'libraries' folder from Java Mode
X hide contrib libraries from Java Mode
X hide contrib examples from Java Mode (since/if not compatible)
X import library
X   allow some sort of single .js file library setup?
X   get p5.dom.js and p5.sound.js into the menu
